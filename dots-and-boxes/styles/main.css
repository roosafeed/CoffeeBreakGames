:root {
    --bg: #0B1220;          /* Neutral 1 (near-black) */
    --panel: #141B2D;       /* Neutral 2 (slate) */
    --text: #E6EDF7;        /* Neutral 3 (off-white) */
    --primary: #00E5FF;     /* Primary (neon cyan) */
    --accent: #A3FF12;      /* Accent (neon lime) */

    /* Sizing & effects */
    --radius: 16px;
    --gap: 14px;
    --panel-pad: 14px;
    --shadow-strong: 0 0 0 1px rgba(230,237,247,0.06), 0 10px 30px rgba(0,0,0,0.35);
    --shadow-glow-primary: 0 0 20px rgba(0,229,255,0.35), 0 0 2px rgba(0,229,255,0.8) inset;
    --shadow-glow-accent: 0 0 20px rgba(163,255,18,0.28), 0 0 2px rgba(163,255,18,0.7) inset;
    --ease: cubic-bezier(.2,.7,.1,1);
    --light-border: 1px solid rgba(230,237,247,0.08)
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: 'Poppins', sans-serif;
    color: var(--text);
    border-radius: var(--radius);
}

body {
    background: var(--bg);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    padding: var(--gap);
    gap: var(--gap);
}

/* Top bar */
#top-bar {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    width: 100%;
    padding: var(--panel-pad);
    align-items: center;
    height: 80px;
}

    #top-bar #controls {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-items: center;
        min-width: 50%;
        gap: var(--gap);
        height: 100%;
    }

        #top-bar #controls .control {
            height: 100%;
            display: inline-flex;
            flex-direction: row;
            flex-wrap: nowrap;
            align-items: center;
            gap: calc(var(--gap) / 2);
            border: var(--light-border);
            box-shadow: var(--shadow-strong);
            padding: calc(var(--panel-pad) / 2) var(--panel-pad);
        }

            #top-bar #controls .control button {
                padding: calc(var(--panel-pad) / 2) var(--panel-pad);
                background: transparent;
                border: var(--light-border);
            }

/* Game container */
#game-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: var(--gap);
    width: 100%;
}

/* Game board */
#game-board {
    width: 100%;
    min-width: 600px;
    min-height: 600px;
    height: fit-content;
    background-color: var(--panel);
    padding: var(--panel-pad);

    display: grid;
    grid-template-rows: repeat(var(--cells, 9), 1fr);
    grid-template-columns: 1fr;
}

/* Board items */
/* row */
.board-row {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(var(--cells, 9), 1fr); 
    grid-template-rows: 1fr;
    justify-items: center;
    align-items: center;
}

/* dot */
.dot {
    pointer-events: none;
    width: clamp(6px, 1.2vmin, 10px);
    height: clamp(6px, 1.2vmin, 10px);
    border-radius: 999px;
    background: var(--text);
    box-shadow: 0 0 12px rgba(230,237,247,0.35);
}

/* edge */
.edge {
    appearance: none;
    border: none;
    width: 100%; 
    height: 100%;
    cursor: pointer;
    position: relative;
    outline: none;
    background-color: attr(data-color type(<color>));
}

    .edge.unmarked {
        background: var(--bg);
    }

    .edge-horizontal {
        height: min(30%, 8px); width: 100%;
    }

    .edge-vertical {
        width: min(30%, 8px); height: 100%;
    }

/* Players */
#players-container {
    display: flex;
    flex-direction: column;
    gap: var(--gap);
    width: 100%;
    max-width: 400px;
    justify-content: space-between;
    padding: var(--panel-pad);
}

.player {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: var(--gap);
    background-color: var(--panel);
    padding: var(--panel-pad);
}

    .player .player-icon {
        width: 40px;
        height: 40px;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;        
    }

        .player .player-icon > span {
            font-size: 1.5rem;
            font-weight: bolder;
            color: var(--bg);
        }

    .player .player-score {
        font-size: 2rem;
        font-weight: bolder;
    }

    .player.current-turn {
        border: solid 2px attr(data-player-color type(<color>));
    }

/* basic */
input[type="text"] {
    background-color: var(--panel);
    border: none;
    outline: none;
    font-size: 1.2rem;
}

input[type="range"] {
    accent-color: var(--primary);
}

label {
    font-size: 0.8rem;
    font-weight: 400;
    opacity: 0.8;
}

button {
    cursor: pointer;
    transition: all var(--ease) 0.2s;
}

    button:hover {
        filter: brightness(2);
    }

    button:focus {
        outline: none;
    }

    button:disabled {
        filter: grayscale(1);
        opacity: 0.8;
        cursor: not-allowed;
    }

    button:active:not(:disabled){
        filter: brightness(1.5);
        transform: scale(0.85);
    }

@media screen and (max-width: 600px) {
    #game-container {
        flex-direction: column-reverse;
        width: 100%;
    }

    #players-container {
        width: 100%;
    }
    
}